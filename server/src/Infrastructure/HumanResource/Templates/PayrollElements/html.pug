doctype html
html(lang='en')
  head
    style.
      body {
        font-family: Arial, sans-serif;
        font-size: 8px;
        margin: 3em 6em;
      }
      ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
      }
      li {
        border-top: 1px solid lightgray;
        padding: 2em 0;
      }
      li:first-child {
        border-top: none;
        padding-top: 0;
      }
      p {
        margin: 0.5em 0;
      }
      table {
        border-collapse: collapse;
      }
      td, th {
        border: 1px solid black;
        padding: 0.2em 0.5em;
      }
      /*
      NOTE: PhantomJS (used by the PDF renderer) does not support CSS Grid,
      and it has limited support for Flexbox, hence the fiddly code.
      See: https://github.com/ariya/phantomjs/issues/14365
      */
      .cols-2, .cols-4 {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        /* margin-bottom: 0.5em; */
      }
      .cols-2 > p {
        -webkit-flex: 50%;
        -ms-flex: 50%;
        flex: 50%;
      }
      .cols-4 > p {
        -webkit-flex: 25%;
        -ms-flex: 25%;
        flex: 25%;
      }

  body
    h1 Fairness - Éléments de paie

    p #[strong Période] : #{dateUtils.format(now, 'MM/y')}

    h2 Totaux

    .cols-4
      p #[strong Salaires bruts] : #{formatMoney(elements.map(el => el.monthlyEarnings).reduce((a, b) => a + b))}
      p #[strong Transport] : #{formatMoney(elements.map(el => el.transportFee).reduce((a, b) => a + b))}
      p #[strong Tickets resto] : #{elements.map(el => el.mealTickets).reduce((a, b) => a + b)}
      div

    h2 Salariés

    ul
      each el in elements
        li
          .cols-4
            p #[strong Prénom] : #{el.firstName}
            p #[strong Nom] : #{el.lastName}
            p #[strong Date d'entrée] : #{dateUtils.format(el.joiningDate, 'dd/MM/y')}
            p #[strong Date de sortie] : #{el.leavingDate ? dateUtils.format(el.leavingDate, 'dd/MM/y') : '/'}

          .cols-2
            p #[strong Salaire brut annuel] : #{formatMoney(el.annualEarnings)}
            p #[strong Salaire brut mensuel] : #{formatMoney(el.monthlyEarnings)}

          .cols-4
            p #[strong TC/TP] : #{el.schedule}
            p #[strong Transport] : #{formatMoney(el.transportFee)}
            p #[strong Tickets resto] : #{el.mealTickets}
            p #[strong Mutuelle] : #{el.healthInsurance ? 'Oui' : 'Non'}

          .cols-4
            p #[strong Congés payés] : #{el.totalPaidLeaves}
            p #[strong Congés sans solde] : #{el.totalUnpaidLeaves}
            p #[strong Congés maladie] : #{el.totalMedicalLeaves}
            p #[strong Congés exceptionnels] : #{el.totalSpecialLeaves}

          if el.leaves.length > 0
            p #[strong Liste des congés] :
            table
              tr
                th Date de début de congés
                th Date de fin de congés
              each leave in el.leaves
                tr
                  td #{dateUtils.format(leave.startDate, 'dd/MM/y')}
                  td #{dateUtils.format(leave.endDate, 'dd/MM/y')}
          else
            p #[strong Liste des congés] : /
